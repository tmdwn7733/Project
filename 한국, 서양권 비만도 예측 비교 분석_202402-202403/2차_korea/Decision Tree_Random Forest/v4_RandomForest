{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Qnro_aaxgHo","executionInfo":{"status":"ok","timestamp":1709787611443,"user_tz":-540,"elapsed":30766,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"c7bd69ca-9d5a-44fe-9569-6d05eba80c70"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"lZ1l5G1jxmUD","executionInfo":{"status":"ok","timestamp":1709787618007,"user_tz":-540,"elapsed":1460,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["healthnut = pd.read_csv('/content/drive/MyDrive/KDT-data-33/Project/Data/K_Obestiy_240227_AddedObe.csv')\n","healthnut"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"4sRO8qE-F_cn","executionInfo":{"status":"ok","timestamp":1709787620880,"user_tz":-540,"elapsed":1223,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"6d2eae05-2414-41bd-f8f5-64ff5adcdb14"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Gender  Age  CALC  SMOKE  FAF_Time  FAF_Day  Height  Weight  TUE  \\\n","0          1   57     3      0  0.000000      0.0   1.793    82.0    4   \n","1          0   39     3      0  0.000000      0.0   1.599    59.0    4   \n","2          0   19     1      0  4.000000      4.0   1.697    63.1    4   \n","3          1   50     1      0  0.000000      0.0   1.722    55.1    4   \n","4          1   49     3      0  0.237481      2.0   1.798    90.1    4   \n","...      ...  ...   ...    ...       ...      ...     ...     ...  ...   \n","3945       1   62     3      1  0.000000      0.0   1.717    61.4    2   \n","3946       0   62     3      0  0.000000      0.0   1.633    64.8    1   \n","3947       1   62     0      1  0.000000      0.0   1.647    68.3    1   \n","3948       0   64     1      0  0.000000      0.0   1.596    63.5    1   \n","3949       1   62     3      0  0.000000      0.0   1.675    70.5    4   \n","\n","           NCP  FAVC  FCVC  SCC       CH2O  NObeyesdad               BMI  \\\n","0     2.571429     1   3.0    0   3.000000           4  25.5066412139419   \n","1     1.714286     1   3.0    0   2.000000           3  23.0757106243309   \n","2     1.357143     1   2.0    0   2.000000           2  21.9111753591992   \n","3     2.143449     1   3.0    0   5.492455           2  18.5816940299816   \n","4     1.714286     0   3.0    1   5.000000           4  27.8705421052436   \n","...        ...   ...   ...  ...        ...         ...               ...   \n","3945  2.571429     1   3.0    0   3.000000           2  20.8270510150813   \n","3946  2.571429     1   3.0    0   3.500000           3  24.2997964892044   \n","3947  2.214286     1   3.0    0   2.000000           4  25.1787117125985   \n","3948  2.571429     0   3.0    0   7.500000           3  24.9291775805428   \n","3949  1.714286     1   3.0    0  10.000000           4  25.1280908888394   \n","\n","     HE_BMI_pct  \n","0                \n","1                \n","2                \n","3                \n","4                \n","...         ...  \n","3945             \n","3946             \n","3947             \n","3948             \n","3949             \n","\n","[3950 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-b78909fe-2c75-4e34-a1fd-b0d85b17cfb8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>CALC</th>\n","      <th>SMOKE</th>\n","      <th>FAF_Time</th>\n","      <th>FAF_Day</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","      <th>TUE</th>\n","      <th>NCP</th>\n","      <th>FAVC</th>\n","      <th>FCVC</th>\n","      <th>SCC</th>\n","      <th>CH2O</th>\n","      <th>NObeyesdad</th>\n","      <th>BMI</th>\n","      <th>HE_BMI_pct</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>57</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.793</td>\n","      <td>82.0</td>\n","      <td>4</td>\n","      <td>2.571429</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>3.000000</td>\n","      <td>4</td>\n","      <td>25.5066412139419</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.599</td>\n","      <td>59.0</td>\n","      <td>4</td>\n","      <td>1.714286</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>3</td>\n","      <td>23.0757106243309</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.000000</td>\n","      <td>4.0</td>\n","      <td>1.697</td>\n","      <td>63.1</td>\n","      <td>4</td>\n","      <td>1.357143</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>2</td>\n","      <td>21.9111753591992</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.722</td>\n","      <td>55.1</td>\n","      <td>4</td>\n","      <td>2.143449</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>5.492455</td>\n","      <td>2</td>\n","      <td>18.5816940299816</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>49</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.237481</td>\n","      <td>2.0</td>\n","      <td>1.798</td>\n","      <td>90.1</td>\n","      <td>4</td>\n","      <td>1.714286</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>5.000000</td>\n","      <td>4</td>\n","      <td>27.8705421052436</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3945</th>\n","      <td>1</td>\n","      <td>62</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.717</td>\n","      <td>61.4</td>\n","      <td>2</td>\n","      <td>2.571429</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>3.000000</td>\n","      <td>2</td>\n","      <td>20.8270510150813</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3946</th>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.633</td>\n","      <td>64.8</td>\n","      <td>1</td>\n","      <td>2.571429</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>3.500000</td>\n","      <td>3</td>\n","      <td>24.2997964892044</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3947</th>\n","      <td>1</td>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.647</td>\n","      <td>68.3</td>\n","      <td>1</td>\n","      <td>2.214286</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>4</td>\n","      <td>25.1787117125985</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3948</th>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.596</td>\n","      <td>63.5</td>\n","      <td>1</td>\n","      <td>2.571429</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>7.500000</td>\n","      <td>3</td>\n","      <td>24.9291775805428</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>3949</th>\n","      <td>1</td>\n","      <td>62</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>1.675</td>\n","      <td>70.5</td>\n","      <td>4</td>\n","      <td>1.714286</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>10.000000</td>\n","      <td>4</td>\n","      <td>25.1280908888394</td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3950 rows × 17 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b78909fe-2c75-4e34-a1fd-b0d85b17cfb8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b78909fe-2c75-4e34-a1fd-b0d85b17cfb8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b78909fe-2c75-4e34-a1fd-b0d85b17cfb8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-329c6555-37ee-4274-9468-485190c3270a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-329c6555-37ee-4274-9468-485190c3270a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-329c6555-37ee-4274-9468-485190c3270a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3fa6ecc6-6fce-4697-aa92-a38da068d3ed\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('healthnut')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3fa6ecc6-6fce-4697-aa92-a38da068d3ed button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('healthnut');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"healthnut","summary":"{\n  \"name\": \"healthnut\",\n  \"rows\": 3950,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 12,\n        \"max\": 64,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          28,\n          33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CALC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMOKE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAF_Time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7860165618565601,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAF_Day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.970859296987041,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          7.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08871704492929437,\n        \"min\": 1.372,\n        \"max\": 1.95,\n        \"num_unique_values\": 420,\n        \"samples\": [\n          1.552,\n          1.522\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.907619525999177,\n        \"min\": 31.1,\n        \"max\": 138.7,\n        \"num_unique_values\": 644,\n        \"samples\": [\n          42.1,\n          91.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TUE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NCP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4044373725415767,\n        \"min\": 0.214285714285714,\n        \"max\": 2.57142857142857,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2.57142857142857,\n          2.21428571428571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAVC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FCVC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14570667410988813,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SCC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2O\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.959596286647074,\n        \"min\": 0.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 776,\n        \"samples\": [\n          5.37998237634218,\n          5.29319376851638\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NObeyesdad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3863,\n        \"samples\": [\n          \"18.2628387756593\",\n          \"22.7377883534933\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HE_BMI_pct\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"3\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","\n","# 물 outlier 제거 (Q3 + 1.5 IQR) --> 3835개인거 확인\n","idx = healthnut[healthnut['CH2O'] >= 11.85].index\n","healthnut.drop(idx , inplace=True)\n","\n","# Scaling (OneHot 안할거야)\n","std_scaler = StandardScaler()\n","mm_scaler = MinMaxScaler()\n","healthnut_scaled = healthnut.drop(columns=['BMI', 'HE_BMI_pct'])\n","std_vars = ['Age', 'Height', 'Weight']\n","minmax_vars = ['FCVC', 'NCP', 'CH2O', 'FAF_Day', 'TUE', 'CALC']\n","healthnut_scaled[std_vars] = std_scaler.fit_transform(healthnut_scaled[std_vars])\n","healthnut_scaled[minmax_vars] = mm_scaler.fit_transform(healthnut_scaled[minmax_vars])\n","healthnut_scaled.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"5Yfiyt8nGcRk","executionInfo":{"status":"ok","timestamp":1709787623392,"user_tz":-540,"elapsed":591,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"5f29783a-63b6-4286-a1bf-4a789f6aec21"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             count          mean       std       min       25%       50%  \\\n","Gender      3835.0  4.383312e-01  0.496247  0.000000  0.000000  0.000000   \n","Age         3835.0  1.926896e-16  1.000130 -1.965351 -0.839488  0.153920   \n","CALC        3835.0  3.178618e-01  0.263825  0.000000  0.000000  0.333333   \n","SMOKE       3835.0  1.971317e-01  0.397884  0.000000  0.000000  0.000000   \n","FAF_Time    3835.0  2.353588e-01  0.782601  0.000000  0.000000  0.000000   \n","FAF_Day     3835.0  1.839574e-01  0.278798  0.000000  0.000000  0.000000   \n","Height      3835.0 -1.667506e-15  1.000130 -3.173295 -0.750734 -0.094152   \n","Weight      3835.0  1.778673e-16  1.000130 -2.475725 -0.757713 -0.144137   \n","TUE         3835.0  6.533681e-01  0.384859  0.000000  0.333333  0.666667   \n","NCP         3835.0  8.198798e-01  0.169895  0.000000  0.696970  0.818433   \n","FAVC        3835.0  7.541069e-01  0.430672  0.000000  1.000000  1.000000   \n","FCVC        3835.0  9.932203e-01  0.048424  0.000000  1.000000  1.000000   \n","SCC         3835.0  1.079531e-01  0.310362  0.000000  0.000000  0.000000   \n","CH2O        3835.0  4.322252e-01  0.196195  0.000000  0.299145  0.427350   \n","NObeyesdad  3835.0  2.908475e+00  1.086129  1.000000  2.000000  3.000000   \n","\n","                 75%       max  \n","Gender      1.000000  1.000000  \n","Age         0.882419  1.478464  \n","CALC        0.333333  1.000000  \n","SMOKE       0.000000  1.000000  \n","FAF_Time    0.237481  7.000000  \n","FAF_Day     0.428571  1.000000  \n","Height      0.743555  3.369882  \n","Weight      0.624637  5.291421  \n","TUE         1.000000  1.000000  \n","NCP         1.000000  1.000000  \n","FAVC        1.000000  1.000000  \n","FCVC        1.000000  1.000000  \n","SCC         0.000000  1.000000  \n","CH2O        0.470085  1.000000  \n","NObeyesdad  4.000000  6.000000  "],"text/html":["\n","  <div id=\"df-c286ef08-413d-4002-b5af-bd90573f584e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Gender</th>\n","      <td>3835.0</td>\n","      <td>4.383312e-01</td>\n","      <td>0.496247</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>3835.0</td>\n","      <td>1.926896e-16</td>\n","      <td>1.000130</td>\n","      <td>-1.965351</td>\n","      <td>-0.839488</td>\n","      <td>0.153920</td>\n","      <td>0.882419</td>\n","      <td>1.478464</td>\n","    </tr>\n","    <tr>\n","      <th>CALC</th>\n","      <td>3835.0</td>\n","      <td>3.178618e-01</td>\n","      <td>0.263825</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SMOKE</th>\n","      <td>3835.0</td>\n","      <td>1.971317e-01</td>\n","      <td>0.397884</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAF_Time</th>\n","      <td>3835.0</td>\n","      <td>2.353588e-01</td>\n","      <td>0.782601</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.237481</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAF_Day</th>\n","      <td>3835.0</td>\n","      <td>1.839574e-01</td>\n","      <td>0.278798</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.428571</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Height</th>\n","      <td>3835.0</td>\n","      <td>-1.667506e-15</td>\n","      <td>1.000130</td>\n","      <td>-3.173295</td>\n","      <td>-0.750734</td>\n","      <td>-0.094152</td>\n","      <td>0.743555</td>\n","      <td>3.369882</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>3835.0</td>\n","      <td>1.778673e-16</td>\n","      <td>1.000130</td>\n","      <td>-2.475725</td>\n","      <td>-0.757713</td>\n","      <td>-0.144137</td>\n","      <td>0.624637</td>\n","      <td>5.291421</td>\n","    </tr>\n","    <tr>\n","      <th>TUE</th>\n","      <td>3835.0</td>\n","      <td>6.533681e-01</td>\n","      <td>0.384859</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NCP</th>\n","      <td>3835.0</td>\n","      <td>8.198798e-01</td>\n","      <td>0.169895</td>\n","      <td>0.000000</td>\n","      <td>0.696970</td>\n","      <td>0.818433</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAVC</th>\n","      <td>3835.0</td>\n","      <td>7.541069e-01</td>\n","      <td>0.430672</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FCVC</th>\n","      <td>3835.0</td>\n","      <td>9.932203e-01</td>\n","      <td>0.048424</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SCC</th>\n","      <td>3835.0</td>\n","      <td>1.079531e-01</td>\n","      <td>0.310362</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CH2O</th>\n","      <td>3835.0</td>\n","      <td>4.322252e-01</td>\n","      <td>0.196195</td>\n","      <td>0.000000</td>\n","      <td>0.299145</td>\n","      <td>0.427350</td>\n","      <td>0.470085</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NObeyesdad</th>\n","      <td>3835.0</td>\n","      <td>2.908475e+00</td>\n","      <td>1.086129</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>4.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c286ef08-413d-4002-b5af-bd90573f584e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c286ef08-413d-4002-b5af-bd90573f584e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c286ef08-413d-4002-b5af-bd90573f584e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d713a63e-2703-4811-96b1-e77691a9a895\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d713a63e-2703-4811-96b1-e77691a9a895')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d713a63e-2703-4811-96b1-e77691a9a895 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"healthnut_scaled\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 3835.0,\n        \"max\": 3835.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3835.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7280980702671455,\n        \"min\": -1.6675057684070148e-15,\n        \"max\": 2.9084745762711863,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.819879847294073\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35255922744373625,\n        \"min\": 0.048424299160091715,\n        \"max\": 1.0861285206395623,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.19619512777286552\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1384499437297357,\n        \"min\": -3.173294555998156,\n        \"max\": 1.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -1.9653510157870109\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7529090822462162,\n        \"min\": -0.8394882878859662,\n        \"max\": 2.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.29914529914529914\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8036653445683621,\n        \"min\": -0.14413732809659438,\n        \"max\": 3.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.4273504273504274\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9451821974185569,\n        \"min\": 0.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.4700854700854701\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1267819072840077,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# Random Forest Using Unscaled Data"],"metadata":{"id":"_PbtsJEuKcB-"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    healthnut.drop(columns = ['NObeyesdad', 'BMI', 'HE_BMI_pct', 'FAF_Time']),\n","    healthnut['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=healthnut['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"SF7orUgKKfvP","executionInfo":{"status":"ok","timestamp":1709787627867,"user_tz":-540,"elapsed":1094,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"3007aca9-635a-4605-f5c5-9f564c906686"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","rf_clf = RandomForestClassifier()\n","rf_clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"Ix5_71sIKvYJ","executionInfo":{"status":"ok","timestamp":1709184376817,"user_tz":-540,"elapsed":1171,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"003b6a2d-5acd-4639-a5ff-ee5ffd49c4c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","rf_pred_train = rf_clf.predict(X_train)\n","rf_pred_test = rf_clf.predict(X_test)\n","\n","confusion_m_train = confusion_matrix(y_train, rf_pred_train)\n","confusion_m_test = confusion_matrix(y_test, rf_pred_test)\n","report_train = classification_report(y_train, rf_pred_train, digits=6)\n","report_test = classification_report(y_test, rf_pred_test, digits=6)\n","\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Train 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EX6sTlcZK6-g","executionInfo":{"status":"ok","timestamp":1709184420379,"user_tz":-540,"elapsed":594,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"578e9c46-f2d2-4444-a98a-dbca5204ea70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 오차행렬\n","[[ 147    0    0    0    0    0]\n"," [   0 1156    0    0    0    0]\n"," [   0    0  600    0    0    0]\n"," [   0    0    0  786    0    0]\n"," [   0    0    0    0  159    0]\n"," [   0    0    0    0    0   28]]\n","\n","Test 오차행렬\n","[[ 24  25   0   0   0   0]\n"," [  1 368  14   3   0   0]\n"," [  0  26 156  18   0   0]\n"," [  0   2  20 236   4   0]\n"," [  0   0   0  24  28   1]\n"," [  0   0   0   2   5   2]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           1   1.000000  1.000000  1.000000       147\n","           2   1.000000  1.000000  1.000000      1156\n","           3   1.000000  1.000000  1.000000       600\n","           4   1.000000  1.000000  1.000000       786\n","           5   1.000000  1.000000  1.000000       159\n","           6   1.000000  1.000000  1.000000        28\n","\n","    accuracy                       1.000000      2876\n","   macro avg   1.000000  1.000000  1.000000      2876\n","weighted avg   1.000000  1.000000  1.000000      2876\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           1   0.960000  0.489796  0.648649        49\n","           2   0.874109  0.953368  0.912020       386\n","           3   0.821053  0.780000  0.800000       200\n","           4   0.833922  0.900763  0.866055       262\n","           5   0.756757  0.528302  0.622222        53\n","           6   0.666667  0.222222  0.333333         9\n","\n","    accuracy                       0.848801       959\n","   macro avg   0.818751  0.645742  0.697047       959\n","weighted avg   0.848021  0.848801  0.841197       959\n","\n"]}]},{"cell_type":"code","source":["feature_importance_df = pd.DataFrame({\n","    'Feature': X_train.columns,\n","    'Importance': rf_clf.feature_importances_\n","})\n","\n","# 특성 중요도 순으로 정렬\n","feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n","\n","# 특성 중요도 시각화\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_importance_df['Feature'], feature_importance_df['Importance'])\n","plt.xlabel('Importance')\n","plt.ylabel('Feature')\n","plt.title('Feature Importance')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"5NlPBzeuLGyh","executionInfo":{"status":"ok","timestamp":1709184462313,"user_tz":-540,"elapsed":564,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"06fd77e0-5c3a-44bb-a582-eeeab69d9351"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# GridSearchCV with Scaled Data"],"metadata":{"id":"1ETonLDhKaRE"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    healthnut_scaled.drop(columns = ['NObeyesdad', 'FAF_Time']),\n","    healthnut_scaled['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=healthnut_scaled['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"hVzqK_-knIZu","executionInfo":{"status":"ok","timestamp":1709787635745,"user_tz":-540,"elapsed":330,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"fc1f183b-d0cf-4c65-ee28-def51bab95ec"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","\n","rfc_params = {'n_estimators':[10, 100, 1000],\n","              'max_depth':[10, 100, 1000],\n","              'min_samples_split': [2, 4, 6, 8, 10],\n","              'min_samples_leaf': [1, 3, 5, 7, 9],\n","              'max_features': [None],\n","              'class_weight': [None, 'balanced'],\n","              'random_state': [42]}\n","\n","grid_rfc = GridSearchCV(\n","    RandomForestClassifier(),\n","    param_grid=rfc_params, # GridSearch를 수행하기 위한 파라미터 목록 전달\n","    scoring='f1_weighted',\n","    return_train_score=True, # 훈련 세트에 대한 평가 점수도 같이 확인하게 해 주는 옵션\n","    n_jobs=-1, # 사용 가능한 CPU 코어를 모두 사용하기\n","    cv=5 # 각 하이퍼 파라미터 조합으로 만드는 모델에서 사용할 폴드의 개수\n",")\n","\n","grid_rfc.fit(X_train, y_train)"],"metadata":{"id":"fKjJwraanPWv","executionInfo":{"status":"ok","timestamp":1709791882191,"user_tz":-540,"elapsed":4183304,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"colab":{"base_uri":"https://localhost:8080/","height":118},"outputId":"b3d6e063-d272-4046-9083-8d3df05beb5b"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={'class_weight': [None, 'balanced'],\n","                         'max_depth': [10, 100, 1000], 'max_features': [None],\n","                         'min_samples_leaf': [1, 3, 5, 7, 9],\n","                         'min_samples_split': [2, 4, 6, 8, 10],\n","                         'n_estimators': [10, 100, 1000],\n","                         'random_state': [42]},\n","             return_train_score=True, scoring='f1_weighted')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;class_weight&#x27;: [None, &#x27;balanced&#x27;],\n","                         &#x27;max_depth&#x27;: [10, 100, 1000], &#x27;max_features&#x27;: [None],\n","                         &#x27;min_samples_leaf&#x27;: [1, 3, 5, 7, 9],\n","                         &#x27;min_samples_split&#x27;: [2, 4, 6, 8, 10],\n","                         &#x27;n_estimators&#x27;: [10, 100, 1000],\n","                         &#x27;random_state&#x27;: [42]},\n","             return_train_score=True, scoring=&#x27;f1_weighted&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;class_weight&#x27;: [None, &#x27;balanced&#x27;],\n","                         &#x27;max_depth&#x27;: [10, 100, 1000], &#x27;max_features&#x27;: [None],\n","                         &#x27;min_samples_leaf&#x27;: [1, 3, 5, 7, 9],\n","                         &#x27;min_samples_split&#x27;: [2, 4, 6, 8, 10],\n","                         &#x27;n_estimators&#x27;: [10, 100, 1000],\n","                         &#x27;random_state&#x27;: [42]},\n","             return_train_score=True, scoring=&#x27;f1_weighted&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["gs_result_df = pd.DataFrame(grid_rfc.cv_results_)\n","gs_result_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"DoCq9kykoBDB","executionInfo":{"status":"ok","timestamp":1709541702989,"user_tz":-540,"elapsed":309,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"e20f0351-181b-425f-e5f5-c8d528a3c31c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n","0         0.099762      0.024953         0.016830        0.003791   \n","1         0.884222      0.155441         0.061562        0.023019   \n","2         9.864116      2.441819         0.339028        0.101130   \n","3         0.067908      0.023026         0.010951        0.004599   \n","4         0.486417      0.079658         0.022022        0.000581   \n","..             ...           ...              ...             ...   \n","445       0.391412      0.005247         0.020468        0.000079   \n","446       4.419218      0.640589         0.190940        0.037457   \n","447       0.043675      0.000762         0.005654        0.000153   \n","448       0.389031      0.009787         0.021293        0.001751   \n","449       4.234669      0.817764         0.196298        0.086452   \n","\n","    param_class_weight param_max_depth param_min_samples_leaf  \\\n","0                 None              10                      1   \n","1                 None              10                      1   \n","2                 None              10                      1   \n","3                 None              10                      1   \n","4                 None              10                      1   \n","..                 ...             ...                    ...   \n","445           balanced            1000                      9   \n","446           balanced            1000                      9   \n","447           balanced            1000                      9   \n","448           balanced            1000                      9   \n","449           balanced            1000                      9   \n","\n","    param_min_samples_split param_n_estimators param_random_state  ...  \\\n","0                         2                 10                 42  ...   \n","1                         2                100                 42  ...   \n","2                         2               1000                 42  ...   \n","3                         4                 10                 42  ...   \n","4                         4                100                 42  ...   \n","..                      ...                ...                ...  ...   \n","445                       8                100                 42  ...   \n","446                       8               1000                 42  ...   \n","447                      10                 10                 42  ...   \n","448                      10                100                 42  ...   \n","449                      10               1000                 42  ...   \n","\n","    mean_test_score  std_test_score  rank_test_score  split0_train_score  \\\n","0          0.761418        0.022479              265            0.942033   \n","1          0.777577        0.026441              161            0.962718   \n","2          0.772393        0.020136              198            0.968155   \n","3          0.766140        0.017304              244            0.940318   \n","4          0.775727        0.018152              172            0.951986   \n","..              ...             ...              ...                 ...   \n","445        0.770358        0.013346              218            0.893733   \n","446        0.775273        0.007889              173            0.900180   \n","447        0.746366        0.017739              320            0.861085   \n","448        0.770358        0.013346              218            0.893733   \n","449        0.775273        0.007889              173            0.900180   \n","\n","     split1_train_score  split2_train_score  split3_train_score  \\\n","0              0.948136            0.947862            0.949033   \n","1              0.969977            0.971217            0.967787   \n","2              0.970854            0.973060            0.970261   \n","3              0.925519            0.939420            0.929584   \n","4              0.953169            0.964579            0.964899   \n","..                  ...                 ...                 ...   \n","445            0.892672            0.902452            0.897767   \n","446            0.896877            0.900311            0.906368   \n","447            0.851688            0.866491            0.848632   \n","448            0.892672            0.902452            0.897767   \n","449            0.896877            0.900311            0.906368   \n","\n","     split4_train_score  mean_train_score  std_train_score  \n","0              0.948908          0.947194         0.002619  \n","1              0.972602          0.968860         0.003455  \n","2              0.977586          0.971983         0.003208  \n","3              0.939364          0.934841         0.006098  \n","4              0.960716          0.959070         0.005514  \n","..                  ...               ...              ...  \n","445            0.896568          0.896638         0.003443  \n","446            0.905152          0.901778         0.003498  \n","447            0.853535          0.856286         0.006549  \n","448            0.896568          0.896638         0.003443  \n","449            0.905152          0.901778         0.003498  \n","\n","[450 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-ba28466f-c03b-4d2e-824e-50aa17c1ac0b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean_fit_time</th>\n","      <th>std_fit_time</th>\n","      <th>mean_score_time</th>\n","      <th>std_score_time</th>\n","      <th>param_class_weight</th>\n","      <th>param_max_depth</th>\n","      <th>param_min_samples_leaf</th>\n","      <th>param_min_samples_split</th>\n","      <th>param_n_estimators</th>\n","      <th>param_random_state</th>\n","      <th>...</th>\n","      <th>mean_test_score</th>\n","      <th>std_test_score</th>\n","      <th>rank_test_score</th>\n","      <th>split0_train_score</th>\n","      <th>split1_train_score</th>\n","      <th>split2_train_score</th>\n","      <th>split3_train_score</th>\n","      <th>split4_train_score</th>\n","      <th>mean_train_score</th>\n","      <th>std_train_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.099762</td>\n","      <td>0.024953</td>\n","      <td>0.016830</td>\n","      <td>0.003791</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.761418</td>\n","      <td>0.022479</td>\n","      <td>265</td>\n","      <td>0.942033</td>\n","      <td>0.948136</td>\n","      <td>0.947862</td>\n","      <td>0.949033</td>\n","      <td>0.948908</td>\n","      <td>0.947194</td>\n","      <td>0.002619</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.884222</td>\n","      <td>0.155441</td>\n","      <td>0.061562</td>\n","      <td>0.023019</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>100</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.777577</td>\n","      <td>0.026441</td>\n","      <td>161</td>\n","      <td>0.962718</td>\n","      <td>0.969977</td>\n","      <td>0.971217</td>\n","      <td>0.967787</td>\n","      <td>0.972602</td>\n","      <td>0.968860</td>\n","      <td>0.003455</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9.864116</td>\n","      <td>2.441819</td>\n","      <td>0.339028</td>\n","      <td>0.101130</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1000</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.772393</td>\n","      <td>0.020136</td>\n","      <td>198</td>\n","      <td>0.968155</td>\n","      <td>0.970854</td>\n","      <td>0.973060</td>\n","      <td>0.970261</td>\n","      <td>0.977586</td>\n","      <td>0.971983</td>\n","      <td>0.003208</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.067908</td>\n","      <td>0.023026</td>\n","      <td>0.010951</td>\n","      <td>0.004599</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.766140</td>\n","      <td>0.017304</td>\n","      <td>244</td>\n","      <td>0.940318</td>\n","      <td>0.925519</td>\n","      <td>0.939420</td>\n","      <td>0.929584</td>\n","      <td>0.939364</td>\n","      <td>0.934841</td>\n","      <td>0.006098</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.486417</td>\n","      <td>0.079658</td>\n","      <td>0.022022</td>\n","      <td>0.000581</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>100</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.775727</td>\n","      <td>0.018152</td>\n","      <td>172</td>\n","      <td>0.951986</td>\n","      <td>0.953169</td>\n","      <td>0.964579</td>\n","      <td>0.964899</td>\n","      <td>0.960716</td>\n","      <td>0.959070</td>\n","      <td>0.005514</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>445</th>\n","      <td>0.391412</td>\n","      <td>0.005247</td>\n","      <td>0.020468</td>\n","      <td>0.000079</td>\n","      <td>balanced</td>\n","      <td>1000</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>100</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.770358</td>\n","      <td>0.013346</td>\n","      <td>218</td>\n","      <td>0.893733</td>\n","      <td>0.892672</td>\n","      <td>0.902452</td>\n","      <td>0.897767</td>\n","      <td>0.896568</td>\n","      <td>0.896638</td>\n","      <td>0.003443</td>\n","    </tr>\n","    <tr>\n","      <th>446</th>\n","      <td>4.419218</td>\n","      <td>0.640589</td>\n","      <td>0.190940</td>\n","      <td>0.037457</td>\n","      <td>balanced</td>\n","      <td>1000</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>1000</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.775273</td>\n","      <td>0.007889</td>\n","      <td>173</td>\n","      <td>0.900180</td>\n","      <td>0.896877</td>\n","      <td>0.900311</td>\n","      <td>0.906368</td>\n","      <td>0.905152</td>\n","      <td>0.901778</td>\n","      <td>0.003498</td>\n","    </tr>\n","    <tr>\n","      <th>447</th>\n","      <td>0.043675</td>\n","      <td>0.000762</td>\n","      <td>0.005654</td>\n","      <td>0.000153</td>\n","      <td>balanced</td>\n","      <td>1000</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.746366</td>\n","      <td>0.017739</td>\n","      <td>320</td>\n","      <td>0.861085</td>\n","      <td>0.851688</td>\n","      <td>0.866491</td>\n","      <td>0.848632</td>\n","      <td>0.853535</td>\n","      <td>0.856286</td>\n","      <td>0.006549</td>\n","    </tr>\n","    <tr>\n","      <th>448</th>\n","      <td>0.389031</td>\n","      <td>0.009787</td>\n","      <td>0.021293</td>\n","      <td>0.001751</td>\n","      <td>balanced</td>\n","      <td>1000</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>100</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.770358</td>\n","      <td>0.013346</td>\n","      <td>218</td>\n","      <td>0.893733</td>\n","      <td>0.892672</td>\n","      <td>0.902452</td>\n","      <td>0.897767</td>\n","      <td>0.896568</td>\n","      <td>0.896638</td>\n","      <td>0.003443</td>\n","    </tr>\n","    <tr>\n","      <th>449</th>\n","      <td>4.234669</td>\n","      <td>0.817764</td>\n","      <td>0.196298</td>\n","      <td>0.086452</td>\n","      <td>balanced</td>\n","      <td>1000</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>1000</td>\n","      <td>42</td>\n","      <td>...</td>\n","      <td>0.775273</td>\n","      <td>0.007889</td>\n","      <td>173</td>\n","      <td>0.900180</td>\n","      <td>0.896877</td>\n","      <td>0.900311</td>\n","      <td>0.906368</td>\n","      <td>0.905152</td>\n","      <td>0.901778</td>\n","      <td>0.003498</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>450 rows × 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba28466f-c03b-4d2e-824e-50aa17c1ac0b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ba28466f-c03b-4d2e-824e-50aa17c1ac0b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ba28466f-c03b-4d2e-824e-50aa17c1ac0b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d6bdb9d-8105-41ff-be3f-778bfcc290f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d6bdb9d-8105-41ff-be3f-778bfcc290f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d6bdb9d-8105-41ff-be3f-778bfcc290f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5ac39fab-2bed-423a-b34d-b666d84312ea\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('gs_result_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5ac39fab-2bed-423a-b34d-b666d84312ea button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('gs_result_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"gs_result_df"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","grid_rfc_pred_train = grid_rfc.predict(X_train)\n","grid_rfc_pred_test = grid_rfc.predict(X_test)\n","confusion_m_train = confusion_matrix(y_train, grid_rfc_pred_train)\n","confusion_m_test = confusion_matrix(y_test, grid_rfc_pred_test)\n","report_train = classification_report(y_train, grid_rfc_pred_train, digits=6)\n","report_test = classification_report(y_test, grid_rfc_pred_test, digits=6)\n","\n","print(f'최고 하이퍼 파라미터: {grid_rfc.best_params_}')\n","print(f'최고 성능 모델의 정확도: {grid_rfc.best_score_}') # 검증 세트에 대한 최고 점수\n","print()\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Test 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tF1Qs_4KoE8_","executionInfo":{"status":"ok","timestamp":1709793139735,"user_tz":-540,"elapsed":10,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"60f46170-ef9a-4f1e-e74f-baeecb151ecb"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["최고 하이퍼 파라미터: {'class_weight': None, 'max_depth': 100, 'max_features': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'n_estimators': 100, 'random_state': 42}\n","최고 성능 모델의 정확도: 0.9282536726856799\n","\n","Train 오차행렬\n","[[ 147    0    0    0    0    0]\n"," [   0 1156    0    0    0    0]\n"," [   0    0  600    0    0    0]\n"," [   0    0    0  786    0    0]\n"," [   0    0    0    0  159    0]\n"," [   0    0    0    0    0   28]]\n","\n","Test 오차행렬\n","[[ 39  10   0   0   0   0]\n"," [  2 373  11   0   0   0]\n"," [  0  12 183   5   0   0]\n"," [  0   0   8 249   5   0]\n"," [  0   0   0   7  43   3]\n"," [  0   0   0   0   2   7]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           1   1.000000  1.000000  1.000000       147\n","           2   1.000000  1.000000  1.000000      1156\n","           3   1.000000  1.000000  1.000000       600\n","           4   1.000000  1.000000  1.000000       786\n","           5   1.000000  1.000000  1.000000       159\n","           6   1.000000  1.000000  1.000000        28\n","\n","    accuracy                       1.000000      2876\n","   macro avg   1.000000  1.000000  1.000000      2876\n","weighted avg   1.000000  1.000000  1.000000      2876\n","\n","Test 성능 평가\n","              precision    recall  f1-score   support\n","\n","           1   0.951220  0.795918  0.866667        49\n","           2   0.944304  0.966321  0.955186       386\n","           3   0.905941  0.915000  0.910448       200\n","           4   0.954023  0.950382  0.952199       262\n","           5   0.860000  0.811321  0.834951        53\n","           6   0.700000  0.777778  0.736842         9\n","\n","    accuracy                       0.932221       959\n","   macro avg   0.885914  0.869453  0.876049       959\n","weighted avg   0.932360  0.932221  0.931823       959\n","\n"]}]},{"cell_type":"code","source":["rf_clf = RandomForestClassifier(class_weight=None, max_depth=100, max_features=None, min_samples_leaf=1, min_samples_split=2, n_estimators=100)\n","rf_clf.fit(X_train, y_train)\n","\n","feature_importance_df = pd.DataFrame({\n","    'Feature': X_train.columns,\n","    'Importance': rf_clf.feature_importances_\n","})\n","\n","# 특성 중요도 순으로 정렬\n","feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n","\n","# 특성 중요도 시각화\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_importance_df['Feature'], feature_importance_df['Importance'])\n","plt.xlabel('Importance')\n","plt.ylabel('Feature')\n","plt.title('Feature Importance')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"Y_jkYaQNtgYk","executionInfo":{"status":"ok","timestamp":1709793193780,"user_tz":-540,"elapsed":1795,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"eb36b2c0-3258-4475-f553-1ad72a8e98a2"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Decision Tree Classifier에 비해서 Feature Importance가 좀 더 고르게 나오긴 하지만 문제는 성능이 꽤 떨어짐...\n","\n","n_esitmators가 증가할수록 성능도 향상되지만... 효율이 너무 나쁘다"],"metadata":{"id":"kMOYIFxt2N5F"}}]}