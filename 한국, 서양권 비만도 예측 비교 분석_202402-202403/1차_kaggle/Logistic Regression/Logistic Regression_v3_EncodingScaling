{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Je8aaf4nBOHK","executionInfo":{"status":"ok","timestamp":1709190289460,"user_tz":-540,"elapsed":20321,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"42d46d3e-2aa5-4fa7-f151-bb458a123561"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"s2ey5EjhDhqm","executionInfo":{"status":"ok","timestamp":1709190361770,"user_tz":-540,"elapsed":1779,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["obe_labeled = pd.read_csv('/content/drive/MyDrive/KDT-data-33/Project/Data/ObesityDataSet_Labeled3.csv')\n","obe_labeled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-61Jcc1UGjGu","executionInfo":{"status":"ok","timestamp":1709190366908,"user_tz":-540,"elapsed":1145,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"c12373ee-5ae4-40f2-b8be-5a1c460452d1"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Gender        Age    Height      Weight  family_history_with_overweight  \\\n","0          0  21.000000  1.620000   64.000000                               1   \n","1          0  21.000000  1.520000   56.000000                               1   \n","2          1  23.000000  1.800000   77.000000                               1   \n","3          1  27.000000  1.800000   87.000000                               0   \n","4          1  22.000000  1.780000   89.800000                               0   \n","...      ...        ...       ...         ...                             ...   \n","2106       0  20.976842  1.710730  131.408528                               1   \n","2107       0  21.982942  1.748584  133.742943                               1   \n","2108       0  22.524036  1.752206  133.689352                               1   \n","2109       0  24.361936  1.739450  133.346641                               1   \n","2110       0  23.664709  1.738836  133.472641                               1   \n","\n","      FAVC  FCVC  NCP  CAEC  SMOKE      CH2O  SCC       FAF       TUE  CALC  \\\n","0        0   2.0  3.0     1      0  2.000000    0  0.000000  1.000000     0   \n","1        0   3.0  3.0     1      1  3.000000    1  3.000000  0.000000     1   \n","2        0   2.0  3.0     1      0  2.000000    0  2.000000  1.000000     2   \n","3        0   3.0  3.0     1      0  2.000000    0  2.000000  0.000000     2   \n","4        0   2.0  1.0     1      0  2.000000    0  0.000000  0.000000     1   \n","...    ...   ...  ...   ...    ...       ...  ...       ...       ...   ...   \n","2106     1   3.0  3.0     1      0  1.728139    0  1.676269  0.906247     1   \n","2107     1   3.0  3.0     1      0  2.005130    0  1.341390  0.599270     1   \n","2108     1   3.0  3.0     1      0  2.054193    0  1.414209  0.646288     1   \n","2109     1   3.0  3.0     1      0  2.852339    0  1.139107  0.586035     1   \n","2110     1   3.0  3.0     1      0  2.863513    0  1.026452  0.714137     1   \n","\n","      MTRANS  NObeyesdad        BMI  \n","0          2           1  24.386526  \n","1          2           1  24.238227  \n","2          2           1  23.765432  \n","3          3           2  26.851852  \n","4          2           3  28.342381  \n","...      ...         ...        ...  \n","2106       2           6  44.901475  \n","2107       2           6  43.741923  \n","2108       2           6  43.543817  \n","2109       2           6  44.071535  \n","2110       2           6  44.144338  \n","\n","[2111 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-5dbc3edc-c33e-4232-89c5-951cf603a29f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","      <th>family_history_with_overweight</th>\n","      <th>FAVC</th>\n","      <th>FCVC</th>\n","      <th>NCP</th>\n","      <th>CAEC</th>\n","      <th>SMOKE</th>\n","      <th>CH2O</th>\n","      <th>SCC</th>\n","      <th>FAF</th>\n","      <th>TUE</th>\n","      <th>CALC</th>\n","      <th>MTRANS</th>\n","      <th>NObeyesdad</th>\n","      <th>BMI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>21.000000</td>\n","      <td>1.620000</td>\n","      <td>64.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>24.386526</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>21.000000</td>\n","      <td>1.520000</td>\n","      <td>56.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.000000</td>\n","      <td>1</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>24.238227</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>23.000000</td>\n","      <td>1.800000</td>\n","      <td>77.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>23.765432</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>27.000000</td>\n","      <td>1.800000</td>\n","      <td>87.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>26.851852</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>22.000000</td>\n","      <td>1.780000</td>\n","      <td>89.800000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>28.342381</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2106</th>\n","      <td>0</td>\n","      <td>20.976842</td>\n","      <td>1.710730</td>\n","      <td>131.408528</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.728139</td>\n","      <td>0</td>\n","      <td>1.676269</td>\n","      <td>0.906247</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>44.901475</td>\n","    </tr>\n","    <tr>\n","      <th>2107</th>\n","      <td>0</td>\n","      <td>21.982942</td>\n","      <td>1.748584</td>\n","      <td>133.742943</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.005130</td>\n","      <td>0</td>\n","      <td>1.341390</td>\n","      <td>0.599270</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>43.741923</td>\n","    </tr>\n","    <tr>\n","      <th>2108</th>\n","      <td>0</td>\n","      <td>22.524036</td>\n","      <td>1.752206</td>\n","      <td>133.689352</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.054193</td>\n","      <td>0</td>\n","      <td>1.414209</td>\n","      <td>0.646288</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>43.543817</td>\n","    </tr>\n","    <tr>\n","      <th>2109</th>\n","      <td>0</td>\n","      <td>24.361936</td>\n","      <td>1.739450</td>\n","      <td>133.346641</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.852339</td>\n","      <td>0</td>\n","      <td>1.139107</td>\n","      <td>0.586035</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>44.071535</td>\n","    </tr>\n","    <tr>\n","      <th>2110</th>\n","      <td>0</td>\n","      <td>23.664709</td>\n","      <td>1.738836</td>\n","      <td>133.472641</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.863513</td>\n","      <td>0</td>\n","      <td>1.026452</td>\n","      <td>0.714137</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>44.144338</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2111 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5dbc3edc-c33e-4232-89c5-951cf603a29f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5dbc3edc-c33e-4232-89c5-951cf603a29f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5dbc3edc-c33e-4232-89c5-951cf603a29f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-15e6550c-44a6-487f-811d-f6d805ce2993\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15e6550c-44a6-487f-811d-f6d805ce2993')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-15e6550c-44a6-487f-811d-f6d805ce2993 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1d997aaf-0a64-4f68-9ad8-d8588e4c9dba\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('obe_labeled')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1d997aaf-0a64-4f68-9ad8-d8588e4c9dba button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('obe_labeled');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"obe_labeled","summary":"{\n  \"name\": \"obe_labeled\",\n  \"rows\": 2111,\n  \"fields\": [\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.345968273732234,\n        \"min\": 14.0,\n        \"max\": 61.0,\n        \"num_unique_values\": 1402,\n        \"samples\": [\n          25.526746,\n          26.740655\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09330481986792007,\n        \"min\": 1.45,\n        \"max\": 1.98,\n        \"num_unique_values\": 1574,\n        \"samples\": [\n          1.760175,\n          1.688436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.1911717452047,\n        \"min\": 39.0,\n        \"max\": 173.0,\n        \"num_unique_values\": 1525,\n        \"samples\": [\n          120.702935,\n          64.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"family_history_with_overweight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAVC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FCVC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5339265785033002,\n        \"min\": 1.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 810,\n        \"samples\": [\n          2.987148,\n          2.939727\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NCP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7780386488418612,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 635,\n        \"samples\": [\n          1.468948,\n          2.9948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CAEC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SMOKE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2O\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6129534517968722,\n        \"min\": 1.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 1268,\n        \"samples\": [\n          2.395387,\n          1.983973\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SCC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.850592430836698,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 1190,\n        \"samples\": [\n          1.655488,\n          2.433918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TUE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6089272596763782,\n        \"min\": 0.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 1129,\n        \"samples\": [\n          1.416353,\n          0.878258\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CALC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MTRANS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NObeyesdad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.011336612534134,\n        \"min\": 12.998684889724604,\n        \"max\": 50.81175280566433,\n        \"num_unique_values\": 1968,\n        \"samples\": [\n          27.955900433111218,\n          35.87312307892319\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["# One-Hot Encoding\n","* 트리모델에서는 상관없지만 회귀모델에서는 one-hot을 해야한대ㅠ"],"metadata":{"id":"1n_TiWXHWgLF"}},{"cell_type":"code","source":["# 바로 dummy 생성하려고 했는데 column이 빈도 내림차순으로 나오네.\n","# 난 오름차순이 더 좋으니 그냥 label 달린거로 dummy 생성하고 column명 변경하자.\n","obe_onehot = obe_labeled.drop('BMI', axis=1)\n","obe_onehot = pd.get_dummies(obe_labeled, columns = ['CAEC', 'CALC', 'MTRANS'])\n","obe_onehot = obe_onehot.rename(columns={'CAEC_0': 'CAEC_no',\n","                                        'CAEC_1': 'CAEC_Sometimes',\n","                                        'CAEC_2': 'CAEC_Frequently',\n","                                        'CAEC_3': 'CAEC_Always',\n","                                        'CALC_0': 'CALC_no',\n","                                        'CALC_1': 'CALC_Sometimes',\n","                                        'CALC_2': 'CALC_Frequently',\n","                                        'CALC_3': 'CALC_Always',\n","                                        'MTRANS_1': 'MTRANS_CarBike',\n","                                        'MTRANS_2': 'MTRANS_Public',\n","                                        'MTRANS_3': 'MTRANS_BikeWalking',\n","                                        })\n","obe_onehot.to_csv('/content/drive/MyDrive/KDT-data-33/Project/Data/ObesityDataSet_OneHot.csv', index=False)"],"metadata":{"id":"uR7u3GehWuK5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["obe_onehot = pd.read_csv('/content/drive/MyDrive/KDT-data-33/Project/Data/ObesityDataSet_OneHot.csv')\n","obe_onehot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"8GKzr9Sle8B1","executionInfo":{"status":"ok","timestamp":1709190581789,"user_tz":-540,"elapsed":847,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"23c41f8f-dd54-461f-c581-6dff438db6c0"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Gender        Age    Height      Weight  family_history_with_overweight  \\\n","0          0  21.000000  1.620000   64.000000                               1   \n","1          0  21.000000  1.520000   56.000000                               1   \n","2          1  23.000000  1.800000   77.000000                               1   \n","3          1  27.000000  1.800000   87.000000                               0   \n","4          1  22.000000  1.780000   89.800000                               0   \n","...      ...        ...       ...         ...                             ...   \n","2106       0  20.976842  1.710730  131.408528                               1   \n","2107       0  21.982942  1.748584  133.742943                               1   \n","2108       0  22.524036  1.752206  133.689352                               1   \n","2109       0  24.361936  1.739450  133.346641                               1   \n","2110       0  23.664709  1.738836  133.472641                               1   \n","\n","      FAVC  FCVC  NCP  SMOKE      CH2O  ...  CAEC_Sometimes  CAEC_Frequently  \\\n","0        0   2.0  3.0      0  2.000000  ...               1                0   \n","1        0   3.0  3.0      1  3.000000  ...               1                0   \n","2        0   2.0  3.0      0  2.000000  ...               1                0   \n","3        0   3.0  3.0      0  2.000000  ...               1                0   \n","4        0   2.0  1.0      0  2.000000  ...               1                0   \n","...    ...   ...  ...    ...       ...  ...             ...              ...   \n","2106     1   3.0  3.0      0  1.728139  ...               1                0   \n","2107     1   3.0  3.0      0  2.005130  ...               1                0   \n","2108     1   3.0  3.0      0  2.054193  ...               1                0   \n","2109     1   3.0  3.0      0  2.852339  ...               1                0   \n","2110     1   3.0  3.0      0  2.863513  ...               1                0   \n","\n","      CAEC_Always  CALC_no  CALC_Sometimes  CALC_Frequently  CALC_Always  \\\n","0               0        1               0                0            0   \n","1               0        0               1                0            0   \n","2               0        0               0                1            0   \n","3               0        0               0                1            0   \n","4               0        0               1                0            0   \n","...           ...      ...             ...              ...          ...   \n","2106            0        0               1                0            0   \n","2107            0        0               1                0            0   \n","2108            0        0               1                0            0   \n","2109            0        0               1                0            0   \n","2110            0        0               1                0            0   \n","\n","      MTRANS_CarBike  MTRANS_Public  MTRANS_BikeWalking  \n","0                  0              1                   0  \n","1                  0              1                   0  \n","2                  0              1                   0  \n","3                  0              0                   1  \n","4                  0              1                   0  \n","...              ...            ...                 ...  \n","2106               0              1                   0  \n","2107               0              1                   0  \n","2108               0              1                   0  \n","2109               0              1                   0  \n","2110               0              1                   0  \n","\n","[2111 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-3502c54e-6a7f-488c-900c-756f9f700b32\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Height</th>\n","      <th>Weight</th>\n","      <th>family_history_with_overweight</th>\n","      <th>FAVC</th>\n","      <th>FCVC</th>\n","      <th>NCP</th>\n","      <th>SMOKE</th>\n","      <th>CH2O</th>\n","      <th>...</th>\n","      <th>CAEC_Sometimes</th>\n","      <th>CAEC_Frequently</th>\n","      <th>CAEC_Always</th>\n","      <th>CALC_no</th>\n","      <th>CALC_Sometimes</th>\n","      <th>CALC_Frequently</th>\n","      <th>CALC_Always</th>\n","      <th>MTRANS_CarBike</th>\n","      <th>MTRANS_Public</th>\n","      <th>MTRANS_BikeWalking</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>21.000000</td>\n","      <td>1.620000</td>\n","      <td>64.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>21.000000</td>\n","      <td>1.520000</td>\n","      <td>56.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>3.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>23.000000</td>\n","      <td>1.800000</td>\n","      <td>77.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>27.000000</td>\n","      <td>1.800000</td>\n","      <td>87.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>22.000000</td>\n","      <td>1.780000</td>\n","      <td>89.800000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2106</th>\n","      <td>0</td>\n","      <td>20.976842</td>\n","      <td>1.710730</td>\n","      <td>131.408528</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>1.728139</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2107</th>\n","      <td>0</td>\n","      <td>21.982942</td>\n","      <td>1.748584</td>\n","      <td>133.742943</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.005130</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2108</th>\n","      <td>0</td>\n","      <td>22.524036</td>\n","      <td>1.752206</td>\n","      <td>133.689352</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.054193</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2109</th>\n","      <td>0</td>\n","      <td>24.361936</td>\n","      <td>1.739450</td>\n","      <td>133.346641</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.852339</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2110</th>\n","      <td>0</td>\n","      <td>23.664709</td>\n","      <td>1.738836</td>\n","      <td>133.472641</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>2.863513</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2111 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3502c54e-6a7f-488c-900c-756f9f700b32')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3502c54e-6a7f-488c-900c-756f9f700b32 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3502c54e-6a7f-488c-900c-756f9f700b32');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2c063069-8d5a-4f5c-9609-57ec061a6f2c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c063069-8d5a-4f5c-9609-57ec061a6f2c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2c063069-8d5a-4f5c-9609-57ec061a6f2c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8ba390da-47a3-4afc-a070-3fd87b815429\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('obe_onehot')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8ba390da-47a3-4afc-a070-3fd87b815429 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('obe_onehot');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"obe_onehot"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# CAEC_no, CALC_no, MTRANS_BikeWalking Column 삭제\n","# 그래야 식간섭취 안하는 사람에 비해, 음주 안하는 사람에 비해, 걷거나 자전거 타는 사람에 비해 다른 사람들의 비만일 odds가 더 높다고 설명하기 용이할 듯\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    obe_onehot.drop(columns = ['CAEC_no', 'CALC_no', 'MTRANS_BikeWalking', 'NObeyesdad']),\n","    obe_onehot['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=obe_onehot['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"Hl4XgMTCe7XG","executionInfo":{"status":"ok","timestamp":1709190585456,"user_tz":-540,"elapsed":813,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"95b80a2c-ad77-48ef-cca1-a24e100617aa"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","logi_reg = LogisticRegression(max_iter=100000)\n","logi_reg.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"rW5x37rHfMt8","executionInfo":{"status":"ok","timestamp":1709190669228,"user_tz":-540,"elapsed":7299,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"e332d45e-ee39-48ac-87e2-dc305e3ea1cb"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=100000)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=100000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=100000)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","logi_reg_pred_train = logi_reg.predict(X_train)\n","logi_reg_pred_test = logi_reg.predict(X_test)\n","\n","confusion_m_train = confusion_matrix(y_train, logi_reg_pred_train)\n","confusion_m_test = confusion_matrix(y_test, logi_reg_pred_test)\n","report_train = classification_report(y_train, logi_reg_pred_train, digits=6)\n","report_test = classification_report(y_test, logi_reg_pred_test, digits=6)\n","\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Test 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dCm1pA3ofap6","executionInfo":{"status":"ok","timestamp":1709190672422,"user_tz":-540,"elapsed":442,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"818e5bde-43e3-4a0f-8bc9-dc9da1d4d15e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 오차행렬\n","[[194  10   0   0   0   0   0]\n"," [ 31 155  21   8   0   0   0]\n"," [  0  12 173  28   4   0   0]\n"," [  0   9  29 145  33   2   0]\n"," [  0   0   4  11 235  13   0]\n"," [  0   0   0   0   5 218   0]\n"," [  0   0   0   0   0   0 243]]\n","\n","Test 오차행렬\n","[[61  7  0  0  0  0  0]\n"," [ 6 52 14  0  0  0  0]\n"," [ 0  7 54  8  4  0  0]\n"," [ 0  1  7 51 12  1  0]\n"," [ 0  0  0  5 76  7  0]\n"," [ 0  0  0  0  0 73  1]\n"," [ 0  0  0  0  0  1 80]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.862222  0.950980  0.904429       204\n","           1   0.833333  0.720930  0.773067       215\n","           2   0.762115  0.797235  0.779279       217\n","           3   0.755208  0.665138  0.707317       218\n","           4   0.848375  0.893536  0.870370       263\n","           5   0.935622  0.977578  0.956140       223\n","           6   1.000000  1.000000  1.000000       243\n","\n","    accuracy                       0.861023      1583\n","   macro avg   0.856697  0.857914  0.855800      1583\n","weighted avg   0.859028  0.861023  0.858584      1583\n","\n","Test 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.910448  0.897059  0.903704        68\n","           1   0.776119  0.722222  0.748201        72\n","           2   0.720000  0.739726  0.729730        73\n","           3   0.796875  0.708333  0.750000        72\n","           4   0.826087  0.863636  0.844444        88\n","           5   0.890244  0.986486  0.935897        74\n","           6   0.987654  0.987654  0.987654        81\n","\n","    accuracy                       0.846591       528\n","   macro avg   0.843918  0.843588  0.842804       528\n","weighted avg   0.845265  0.846591  0.845000       528\n","\n"]}]},{"cell_type":"markdown","source":["망. 다시합시다.\n","\n","특히 Weight 변수를 떼면 0.6대로 더 떨어지니 그건 넣고 합시다.\n","\n","상관관계가 높은 변수들도 떼어봤는데 결국 다 포함시킨 것이 가장 성능이 좋음"],"metadata":{"id":"18DJrI5DhNuL"}},{"cell_type":"markdown","source":["# 번외: MTRANS까지 모두 ordinal로 가정하고 BMI만 떼고 돌려보기"],"metadata":{"id":"NPTC_cWy-gKq"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    obe_labeled.drop(columns = ['BMI', 'NObeyesdad']),\n","    obe_labeled['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=obe_labeled['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"1sfIlNoov3eR","executionInfo":{"status":"ok","timestamp":1709190782411,"user_tz":-540,"elapsed":1271,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"3a4e51a4-1b02-48c2-c1da-8df3a28adc78"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","logi_reg = LogisticRegression(max_iter=100000)\n","logi_reg.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"qJhrfk_5v6A0","executionInfo":{"status":"ok","timestamp":1709190803425,"user_tz":-540,"elapsed":12426,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"0059a5c6-dce4-4e83-df87-14127aeb87f2"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=100000)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=100000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=100000)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","logi_reg_pred_train = logi_reg.predict(X_train)\n","logi_reg_pred_test = logi_reg.predict(X_test)\n","\n","confusion_m_train = confusion_matrix(y_train, logi_reg_pred_train)\n","confusion_m_test = confusion_matrix(y_test, logi_reg_pred_test)\n","report_train = classification_report(y_train, logi_reg_pred_train, digits=6)\n","report_test = classification_report(y_test, logi_reg_pred_test, digits=6)\n","\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Test 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LnRo07PLv-wQ","executionInfo":{"status":"ok","timestamp":1709190809076,"user_tz":-540,"elapsed":10,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"6ba5f2be-ac08-49d8-f757-84ba6ef1b9c1"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 오차행렬\n","[[192  12   0   0   0   0   0]\n"," [ 31 152  20  12   0   0   0]\n"," [  0  17 161  35   4   0   0]\n"," [  0   9  32 143  30   4   0]\n"," [  0   0   2  12 237  12   0]\n"," [  0   0   0   0   4 219   0]\n"," [  0   0   0   0   0   0 243]]\n","\n","Test 오차행렬\n","[[60  8  0  0  0  0  0]\n"," [ 8 49 12  3  0  0  0]\n"," [ 0  6 53 10  4  0  0]\n"," [ 0  1  9 49 12  1  0]\n"," [ 0  0  0  4 77  7  0]\n"," [ 0  0  0  0  0 73  1]\n"," [ 0  0  0  0  0  1 80]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.860987  0.941176  0.899297       204\n","           1   0.800000  0.706977  0.750617       215\n","           2   0.748837  0.741935  0.745370       217\n","           3   0.707921  0.655963  0.680952       218\n","           4   0.861818  0.901141  0.881041       263\n","           5   0.931915  0.982063  0.956332       223\n","           6   1.000000  1.000000  1.000000       243\n","\n","    accuracy                       0.850916      1583\n","   macro avg   0.844497  0.847036  0.844801      1583\n","weighted avg   0.847720  0.850916  0.848394      1583\n","\n","Test 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.882353  0.882353  0.882353        68\n","           1   0.765625  0.680556  0.720588        72\n","           2   0.716216  0.726027  0.721088        73\n","           3   0.742424  0.680556  0.710145        72\n","           4   0.827957  0.875000  0.850829        88\n","           5   0.890244  0.986486  0.935897        74\n","           6   0.987654  0.987654  0.987654        81\n","\n","    accuracy                       0.835227       528\n","   macro avg   0.830353  0.831233  0.829794       528\n","weighted avg   0.832579  0.835227  0.832920       528\n","\n"]}]},{"cell_type":"markdown","source":["독립변수에 Ordinal encoding된 변수를 넣어도 되지만 성능은 One-hot에 비해 더 떨어지는 거로"],"metadata":{"id":"VIebnSNC9uHa"}},{"cell_type":"markdown","source":["# 정규화! 정말 하기 싫었지만 드디어!\n","1. One-hot 인코딩 데이터에서 연속형만 StandardScaler\n","1. Ordinal 인코딩 데이터에서 ordinal은 MinMaxScaler, 연속형은 StandardScaler"],"metadata":{"id":"9vCb9x9K-tgR"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","\n","std_scaler = StandardScaler()\n","mm_scaler = MinMaxScaler()\n","obe_onehot_scaled = obe_onehot\n","cont_vars = ['Age', 'Height', 'Weight']\n","ord_vars = ['FCVC', 'NCP', 'CH2O', 'FAF', 'TUE']\n","obe_onehot_scaled[cont_vars] = std_scaler.fit_transform(obe_onehot_scaled[cont_vars])\n","obe_onehot_scaled[ord_vars] = mm_scaler.fit_transform(obe_onehot_scaled[ord_vars])\n","obe_onehot_scaled.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"yDnsEVGKU_Tg","executionInfo":{"status":"ok","timestamp":1709190862750,"user_tz":-540,"elapsed":492,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"35e8c085-f724-4c43-ab71-487ec5daeadb"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 count          mean       std       min  \\\n","Gender                          2111.0  5.059214e-01  0.500083  0.000000   \n","Age                             2111.0  0.000000e+00  1.000237 -1.625448   \n","Height                          2111.0 -5.385449e-16  1.000237 -2.698006   \n","Weight                          2111.0 -5.385449e-16  1.000237 -1.817304   \n","family_history_with_overweight  2111.0  8.176220e-01  0.386247  0.000000   \n","FAVC                            2111.0  8.839413e-01  0.320371  0.000000   \n","FCVC                            2111.0  7.095215e-01  0.266963  0.000000   \n","NCP                             2111.0  5.618760e-01  0.259346  0.000000   \n","SMOKE                           2111.0  2.084320e-02  0.142893  0.000000   \n","CH2O                            2111.0  5.040057e-01  0.306477  0.000000   \n","SCC                             2111.0  4.547608e-02  0.208395  0.000000   \n","FAF                             2111.0  3.367659e-01  0.283531  0.000000   \n","TUE                             2111.0  3.289330e-01  0.304464  0.000000   \n","NObeyesdad                      2111.0  3.112269e+00  1.985062  0.000000   \n","CAEC_no                         2111.0  2.415917e-02  0.153580  0.000000   \n","CAEC_Sometimes                  2111.0  8.360966e-01  0.370276  0.000000   \n","CAEC_Frequently                 2111.0  1.146376e-01  0.318660  0.000000   \n","CAEC_Always                     2111.0  2.510658e-02  0.156486  0.000000   \n","CALC_no                         2111.0  3.027001e-01  0.459535  0.000000   \n","CALC_Sometimes                  2111.0  6.636665e-01  0.472566  0.000000   \n","CALC_Frequently                 2111.0  3.315964e-02  0.179096  0.000000   \n","CALC_Always                     2111.0  4.737091e-04  0.021765  0.000000   \n","MTRANS_CarBike                  2111.0  2.216959e-01  0.415486  0.000000   \n","MTRANS_Public                   2111.0  7.484604e-01  0.434001  0.000000   \n","MTRANS_BikeWalking              2111.0  2.984368e-02  0.170196  0.000000   \n","\n","                                     25%       50%       75%       max  \n","Gender                          0.000000  1.000000  1.000000  1.000000  \n","Age                            -0.688066 -0.241897  0.265964  5.782584  \n","Height                         -0.768388 -0.012632  0.715959  2.983646  \n","Weight                         -0.806291 -0.136951  0.796053  3.300136  \n","family_history_with_overweight  1.000000  1.000000  1.000000  1.000000  \n","FAVC                            1.000000  1.000000  1.000000  1.000000  \n","FCVC                            0.500000  0.692751  1.000000  1.000000  \n","NCP                             0.552913  0.666667  0.666667  1.000000  \n","SMOKE                           0.000000  0.000000  0.000000  1.000000  \n","CH2O                            0.292406  0.500000  0.738710  1.000000  \n","SCC                             0.000000  0.000000  0.000000  1.000000  \n","FAF                             0.041502  0.333333  0.555559  1.000000  \n","TUE                             0.000000  0.312675  0.500000  1.000000  \n","NObeyesdad                      1.000000  3.000000  5.000000  6.000000  \n","CAEC_no                         0.000000  0.000000  0.000000  1.000000  \n","CAEC_Sometimes                  1.000000  1.000000  1.000000  1.000000  \n","CAEC_Frequently                 0.000000  0.000000  0.000000  1.000000  \n","CAEC_Always                     0.000000  0.000000  0.000000  1.000000  \n","CALC_no                         0.000000  0.000000  1.000000  1.000000  \n","CALC_Sometimes                  0.000000  1.000000  1.000000  1.000000  \n","CALC_Frequently                 0.000000  0.000000  0.000000  1.000000  \n","CALC_Always                     0.000000  0.000000  0.000000  1.000000  \n","MTRANS_CarBike                  0.000000  0.000000  0.000000  1.000000  \n","MTRANS_Public                   0.000000  1.000000  1.000000  1.000000  \n","MTRANS_BikeWalking              0.000000  0.000000  0.000000  1.000000  "],"text/html":["\n","  <div id=\"df-eb10135e-b76f-4b3e-bff4-404569b3003d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Gender</th>\n","      <td>2111.0</td>\n","      <td>5.059214e-01</td>\n","      <td>0.500083</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>2111.0</td>\n","      <td>0.000000e+00</td>\n","      <td>1.000237</td>\n","      <td>-1.625448</td>\n","      <td>-0.688066</td>\n","      <td>-0.241897</td>\n","      <td>0.265964</td>\n","      <td>5.782584</td>\n","    </tr>\n","    <tr>\n","      <th>Height</th>\n","      <td>2111.0</td>\n","      <td>-5.385449e-16</td>\n","      <td>1.000237</td>\n","      <td>-2.698006</td>\n","      <td>-0.768388</td>\n","      <td>-0.012632</td>\n","      <td>0.715959</td>\n","      <td>2.983646</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>2111.0</td>\n","      <td>-5.385449e-16</td>\n","      <td>1.000237</td>\n","      <td>-1.817304</td>\n","      <td>-0.806291</td>\n","      <td>-0.136951</td>\n","      <td>0.796053</td>\n","      <td>3.300136</td>\n","    </tr>\n","    <tr>\n","      <th>family_history_with_overweight</th>\n","      <td>2111.0</td>\n","      <td>8.176220e-01</td>\n","      <td>0.386247</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAVC</th>\n","      <td>2111.0</td>\n","      <td>8.839413e-01</td>\n","      <td>0.320371</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FCVC</th>\n","      <td>2111.0</td>\n","      <td>7.095215e-01</td>\n","      <td>0.266963</td>\n","      <td>0.000000</td>\n","      <td>0.500000</td>\n","      <td>0.692751</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NCP</th>\n","      <td>2111.0</td>\n","      <td>5.618760e-01</td>\n","      <td>0.259346</td>\n","      <td>0.000000</td>\n","      <td>0.552913</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SMOKE</th>\n","      <td>2111.0</td>\n","      <td>2.084320e-02</td>\n","      <td>0.142893</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CH2O</th>\n","      <td>2111.0</td>\n","      <td>5.040057e-01</td>\n","      <td>0.306477</td>\n","      <td>0.000000</td>\n","      <td>0.292406</td>\n","      <td>0.500000</td>\n","      <td>0.738710</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SCC</th>\n","      <td>2111.0</td>\n","      <td>4.547608e-02</td>\n","      <td>0.208395</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAF</th>\n","      <td>2111.0</td>\n","      <td>3.367659e-01</td>\n","      <td>0.283531</td>\n","      <td>0.000000</td>\n","      <td>0.041502</td>\n","      <td>0.333333</td>\n","      <td>0.555559</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>TUE</th>\n","      <td>2111.0</td>\n","      <td>3.289330e-01</td>\n","      <td>0.304464</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.312675</td>\n","      <td>0.500000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NObeyesdad</th>\n","      <td>2111.0</td>\n","      <td>3.112269e+00</td>\n","      <td>1.985062</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CAEC_no</th>\n","      <td>2111.0</td>\n","      <td>2.415917e-02</td>\n","      <td>0.153580</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CAEC_Sometimes</th>\n","      <td>2111.0</td>\n","      <td>8.360966e-01</td>\n","      <td>0.370276</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CAEC_Frequently</th>\n","      <td>2111.0</td>\n","      <td>1.146376e-01</td>\n","      <td>0.318660</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CAEC_Always</th>\n","      <td>2111.0</td>\n","      <td>2.510658e-02</td>\n","      <td>0.156486</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CALC_no</th>\n","      <td>2111.0</td>\n","      <td>3.027001e-01</td>\n","      <td>0.459535</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CALC_Sometimes</th>\n","      <td>2111.0</td>\n","      <td>6.636665e-01</td>\n","      <td>0.472566</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CALC_Frequently</th>\n","      <td>2111.0</td>\n","      <td>3.315964e-02</td>\n","      <td>0.179096</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CALC_Always</th>\n","      <td>2111.0</td>\n","      <td>4.737091e-04</td>\n","      <td>0.021765</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>MTRANS_CarBike</th>\n","      <td>2111.0</td>\n","      <td>2.216959e-01</td>\n","      <td>0.415486</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>MTRANS_Public</th>\n","      <td>2111.0</td>\n","      <td>7.484604e-01</td>\n","      <td>0.434001</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>MTRANS_BikeWalking</th>\n","      <td>2111.0</td>\n","      <td>2.984368e-02</td>\n","      <td>0.170196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb10135e-b76f-4b3e-bff4-404569b3003d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb10135e-b76f-4b3e-bff4-404569b3003d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb10135e-b76f-4b3e-bff4-404569b3003d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c2724674-5a41-4f7c-b8b9-3f09c178314f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c2724674-5a41-4f7c-b8b9-3f09c178314f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c2724674-5a41-4f7c-b8b9-3f09c178314f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"obe_onehot_scaled\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 2111.0,\n        \"max\": 2111.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2111.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6408655811384071,\n        \"min\": -5.385449442047183e-16,\n        \"max\": 3.1122690667929893,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          0.5040057020369493\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4140310646551348,\n        \"min\": 0.02176486027031765,\n        \"max\": 1.9850617752955109,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          0.15648592295981498\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6986760831696722,\n        \"min\": -2.698006232283177,\n        \"max\": 0.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -1.625448303271646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4986023440222291,\n        \"min\": -0.8062914386705999,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.29240625000000003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6928162135900263,\n        \"min\": -0.24189744962683477,\n        \"max\": 3.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.6666666666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9974679213985518,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4315504100451277,\n        \"min\": 1.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.78258370912611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    obe_onehot_scaled.drop(columns = ['CAEC_no', 'CALC_no', 'MTRANS_BikeWalking', 'NObeyesdad']),\n","    obe_onehot_scaled['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=obe_onehot_scaled['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"QXLOW27mdiRS","executionInfo":{"status":"ok","timestamp":1709190902925,"user_tz":-540,"elapsed":382,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"b0980494-59b9-4abb-dfbf-a682b3b143c2"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","logi_reg = LogisticRegression(max_iter=100000)\n","logi_reg.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"SdrhTdIFdo8H","executionInfo":{"status":"ok","timestamp":1709190937494,"user_tz":-540,"elapsed":307,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"3a8b958f-a0c4-4877-e6cb-74e62dd5a1ff"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=100000)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=100000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=100000)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","logi_reg_pred_train = logi_reg.predict(X_train)\n","logi_reg_pred_test = logi_reg.predict(X_test)\n","\n","confusion_m_train = confusion_matrix(y_train, logi_reg_pred_train)\n","confusion_m_test = confusion_matrix(y_test, logi_reg_pred_test)\n","report_train = classification_report(y_train, logi_reg_pred_train, digits=6)\n","report_test = classification_report(y_test, logi_reg_pred_test, digits=6)\n","\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Test 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MY40sMY0drvb","executionInfo":{"status":"ok","timestamp":1709190946794,"user_tz":-540,"elapsed":319,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"1522cd0e-09f3-468f-df38-e210acabe3fd"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 오차행렬\n","[[201   3   0   0   0   0   0]\n"," [ 23 164  20   8   0   0   0]\n"," [  0  14 176  26   1   0   0]\n"," [  0   5  23 178  12   0   0]\n"," [  0   0   1   7 242  13   0]\n"," [  0   0   0   0   2 221   0]\n"," [  0   0   0   0   0   0 243]]\n","\n","Test 오차행렬\n","[[68  0  0  0  0  0  0]\n"," [ 4 57 11  0  0  0  0]\n"," [ 0  7 56 10  0  0  0]\n"," [ 0  0  5 63  4  0  0]\n"," [ 0  0  0  4 76  8  0]\n"," [ 0  0  0  0  1 72  1]\n"," [ 0  0  0  0  1  1 79]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.897321  0.985294  0.939252       204\n","           1   0.881720  0.762791  0.817955       215\n","           2   0.800000  0.811060  0.805492       217\n","           3   0.812785  0.816514  0.814645       218\n","           4   0.941634  0.920152  0.930769       263\n","           5   0.944444  0.991031  0.967177       223\n","           6   1.000000  1.000000  1.000000       243\n","\n","    accuracy                       0.900190      1583\n","   macro avg   0.896844  0.898120  0.896470      1583\n","weighted avg   0.899982  0.900190  0.899131      1583\n","\n","Test 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.944444  1.000000  0.971429        68\n","           1   0.890625  0.791667  0.838235        72\n","           2   0.777778  0.767123  0.772414        73\n","           3   0.818182  0.875000  0.845638        72\n","           4   0.926829  0.863636  0.894118        88\n","           5   0.888889  0.972973  0.929032        74\n","           6   0.987500  0.975309  0.981366        81\n","\n","    accuracy                       0.892045       528\n","   macro avg   0.890607  0.892244  0.890319       528\n","weighted avg   0.892728  0.892045  0.891295       528\n","\n"]}]},{"cell_type":"code","source":["coefficients = logi_reg.coef_\n","\n","avg_importance = np.mean(np.abs(coefficients), axis=0)\n","feature_importance = pd.DataFrame({'Feature': X_train.columns, 'Importance': avg_importance})\n","feature_importance = feature_importance.sort_values('Importance', ascending=True)\n","feature_importance.plot(x='Feature', y='Importance', kind='barh', figsize=(10, 6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"id":"mhOXhx_S1im8","executionInfo":{"status":"ok","timestamp":1709190969834,"user_tz":-540,"elapsed":948,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"c5318d21-3919-4b6d-d7eb-9af47a7fa5a2"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Feature'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["전부 다 StandardScaler를 사용하는 것보다\n","\n","Age, Height, Weight만 std\n","\n","나머지 FCVC, NCP, CH2O, FAF, TUE는 mm을 사용하는 것이 미세하게 더 좋다."],"metadata":{"id":"yUpZrxMcn-z7"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","\n","std_scaler = StandardScaler()\n","mm_scaler = MinMaxScaler()\n","obe_labeled_scaled = obe_labeled\n","cont_vars = ['Age', 'Height', 'Weight']\n","ordinal_vars = ['CAEC', 'CALC', 'MTRANS', 'FCVC', 'NCP', 'CH2O', 'FAF', 'TUE']\n","obe_labeled_scaled[cont_vars] = std_scaler.fit_transform(obe_labeled_scaled[cont_vars])\n","obe_labeled_scaled[ordinal_vars] = mm_scaler.fit_transform(obe_labeled_scaled[ordinal_vars])\n","\n","obe_labeled_scaled.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":613},"id":"HY-3DyVRlKAO","executionInfo":{"status":"ok","timestamp":1709191038804,"user_tz":-540,"elapsed":461,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"6b0c457f-7bac-4a9d-fabf-fc653868880d"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 count          mean       std        min  \\\n","Gender                          2111.0  5.059214e-01  0.500083   0.000000   \n","Age                             2111.0  0.000000e+00  1.000237  -1.625448   \n","Height                          2111.0 -5.385449e-16  1.000237  -2.698006   \n","Weight                          2111.0 -5.385449e-16  1.000237  -1.817304   \n","family_history_with_overweight  2111.0  8.176220e-01  0.386247   0.000000   \n","FAVC                            2111.0  8.839413e-01  0.320371   0.000000   \n","FCVC                            2111.0  7.095215e-01  0.266963   0.000000   \n","NCP                             2111.0  5.618760e-01  0.259346   0.000000   \n","CAEC                            2111.0  3.802305e-01  0.156181   0.000000   \n","SMOKE                           2111.0  2.084320e-02  0.142893   0.000000   \n","CH2O                            2111.0  5.040057e-01  0.306477   0.000000   \n","SCC                             2111.0  4.547608e-02  0.208395   0.000000   \n","FAF                             2111.0  3.367659e-01  0.283531   0.000000   \n","TUE                             2111.0  3.289330e-01  0.304464   0.000000   \n","CALC                            2111.0  2.438023e-01  0.171833   0.000000   \n","MTRANS                          2111.0  4.040739e-01  0.231751   0.000000   \n","NObeyesdad                      2111.0  3.112269e+00  1.985062   0.000000   \n","BMI                             2111.0  2.970016e+01  8.011337  12.998685   \n","\n","                                      25%        50%        75%        max  \n","Gender                           0.000000   1.000000   1.000000   1.000000  \n","Age                             -0.688066  -0.241897   0.265964   5.782584  \n","Height                          -0.768388  -0.012632   0.715959   2.983646  \n","Weight                          -0.806291  -0.136951   0.796053   3.300136  \n","family_history_with_overweight   1.000000   1.000000   1.000000   1.000000  \n","FAVC                             1.000000   1.000000   1.000000   1.000000  \n","FCVC                             0.500000   0.692751   1.000000   1.000000  \n","NCP                              0.552913   0.666667   0.666667   1.000000  \n","CAEC                             0.333333   0.333333   0.333333   1.000000  \n","SMOKE                            0.000000   0.000000   0.000000   1.000000  \n","CH2O                             0.292406   0.500000   0.738710   1.000000  \n","SCC                              0.000000   0.000000   0.000000   1.000000  \n","FAF                              0.041502   0.333333   0.555559   1.000000  \n","TUE                              0.000000   0.312675   0.500000   1.000000  \n","CALC                             0.000000   0.333333   0.333333   1.000000  \n","MTRANS                           0.500000   0.500000   0.500000   1.000000  \n","NObeyesdad                       1.000000   3.000000   5.000000   6.000000  \n","BMI                             24.325802  28.719089  36.016501  50.811753  "],"text/html":["\n","  <div id=\"df-49543b28-2348-4804-a9e7-446c3f847031\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Gender</th>\n","      <td>2111.0</td>\n","      <td>5.059214e-01</td>\n","      <td>0.500083</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>2111.0</td>\n","      <td>0.000000e+00</td>\n","      <td>1.000237</td>\n","      <td>-1.625448</td>\n","      <td>-0.688066</td>\n","      <td>-0.241897</td>\n","      <td>0.265964</td>\n","      <td>5.782584</td>\n","    </tr>\n","    <tr>\n","      <th>Height</th>\n","      <td>2111.0</td>\n","      <td>-5.385449e-16</td>\n","      <td>1.000237</td>\n","      <td>-2.698006</td>\n","      <td>-0.768388</td>\n","      <td>-0.012632</td>\n","      <td>0.715959</td>\n","      <td>2.983646</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>2111.0</td>\n","      <td>-5.385449e-16</td>\n","      <td>1.000237</td>\n","      <td>-1.817304</td>\n","      <td>-0.806291</td>\n","      <td>-0.136951</td>\n","      <td>0.796053</td>\n","      <td>3.300136</td>\n","    </tr>\n","    <tr>\n","      <th>family_history_with_overweight</th>\n","      <td>2111.0</td>\n","      <td>8.176220e-01</td>\n","      <td>0.386247</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAVC</th>\n","      <td>2111.0</td>\n","      <td>8.839413e-01</td>\n","      <td>0.320371</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FCVC</th>\n","      <td>2111.0</td>\n","      <td>7.095215e-01</td>\n","      <td>0.266963</td>\n","      <td>0.000000</td>\n","      <td>0.500000</td>\n","      <td>0.692751</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NCP</th>\n","      <td>2111.0</td>\n","      <td>5.618760e-01</td>\n","      <td>0.259346</td>\n","      <td>0.000000</td>\n","      <td>0.552913</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CAEC</th>\n","      <td>2111.0</td>\n","      <td>3.802305e-01</td>\n","      <td>0.156181</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SMOKE</th>\n","      <td>2111.0</td>\n","      <td>2.084320e-02</td>\n","      <td>0.142893</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CH2O</th>\n","      <td>2111.0</td>\n","      <td>5.040057e-01</td>\n","      <td>0.306477</td>\n","      <td>0.000000</td>\n","      <td>0.292406</td>\n","      <td>0.500000</td>\n","      <td>0.738710</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SCC</th>\n","      <td>2111.0</td>\n","      <td>4.547608e-02</td>\n","      <td>0.208395</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>FAF</th>\n","      <td>2111.0</td>\n","      <td>3.367659e-01</td>\n","      <td>0.283531</td>\n","      <td>0.000000</td>\n","      <td>0.041502</td>\n","      <td>0.333333</td>\n","      <td>0.555559</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>TUE</th>\n","      <td>2111.0</td>\n","      <td>3.289330e-01</td>\n","      <td>0.304464</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.312675</td>\n","      <td>0.500000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>CALC</th>\n","      <td>2111.0</td>\n","      <td>2.438023e-01</td>\n","      <td>0.171833</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>MTRANS</th>\n","      <td>2111.0</td>\n","      <td>4.040739e-01</td>\n","      <td>0.231751</td>\n","      <td>0.000000</td>\n","      <td>0.500000</td>\n","      <td>0.500000</td>\n","      <td>0.500000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>NObeyesdad</th>\n","      <td>2111.0</td>\n","      <td>3.112269e+00</td>\n","      <td>1.985062</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>2111.0</td>\n","      <td>2.970016e+01</td>\n","      <td>8.011337</td>\n","      <td>12.998685</td>\n","      <td>24.325802</td>\n","      <td>28.719089</td>\n","      <td>36.016501</td>\n","      <td>50.811753</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49543b28-2348-4804-a9e7-446c3f847031')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-49543b28-2348-4804-a9e7-446c3f847031 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-49543b28-2348-4804-a9e7-446c3f847031');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-303a28dd-df17-4559-86af-d400d2adea18\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-303a28dd-df17-4559-86af-d400d2adea18')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-303a28dd-df17-4559-86af-d400d2adea18 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"obe_labeled_scaled\",\n  \"rows\": 18,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 2111.0,\n        \"max\": 2111.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2111.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.9136329831801175,\n        \"min\": -5.385449442047183e-16,\n        \"max\": 29.700158778414636,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.5059213642823307\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8312951870276575,\n        \"min\": 0.14289309147889065,\n        \"max\": 8.011336612534134,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.5000833972849265\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.2501301569174834,\n        \"min\": -2.698006232283177,\n        \"max\": 12.998684889724604,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -1.625448303271646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.7194639615883975,\n        \"min\": -0.8062914386705999,\n        \"max\": 24.325801842254698,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.679635393249225,\n        \"min\": -0.24189744962683477,\n        \"max\": 28.71908906003529,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.36020931785758,\n        \"min\": 0.0,\n        \"max\": 36.0165008280817,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.66094445108454,\n        \"min\": 1.0,\n        \"max\": 50.81175280566433,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    obe_labeled_scaled.drop(columns = ['BMI', 'NObeyesdad']),\n","    obe_labeled_scaled['NObeyesdad'], # Feature와 Label의 N을 맞추는 과정\n","    random_state=42, # 랜덤하게 자르는데 random_state를 1로 줄 경우 항상 같은 랜덤으로 고정\n","    stratify=obe_labeled_scaled['NObeyesdad'] # 클래스의 비율만큼 분할 수행\n",")\n","\n","sns.countplot(x=y_train)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"kgN5odgXmocw","executionInfo":{"status":"ok","timestamp":1709191041864,"user_tz":-540,"elapsed":500,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"6485ada8-306f-4b75-b662-eda20eca7c3e"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","logi_reg = LogisticRegression(max_iter=100000)\n","logi_reg.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"dGFka-DGnIg-","executionInfo":{"status":"ok","timestamp":1709191051481,"user_tz":-540,"elapsed":331,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"a5de2b9d-293d-4587-a9df-de2ca4ff4bd1"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=100000)"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=100000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=100000)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","\n","logi_reg_pred_train = logi_reg.predict(X_train)\n","logi_reg_pred_test = logi_reg.predict(X_test)\n","\n","confusion_m_train = confusion_matrix(y_train, logi_reg_pred_train)\n","confusion_m_test = confusion_matrix(y_test, logi_reg_pred_test)\n","report_train = classification_report(y_train, logi_reg_pred_train, digits=6)\n","report_test = classification_report(y_test, logi_reg_pred_test, digits=6)\n","\n","print(f'Train 오차행렬\\n{confusion_m_train}')\n","print()\n","print(f'Test 오차행렬\\n{confusion_m_test}')\n","print()\n","print()\n","print(f'Train 성능 평가\\n{report_train}')\n","print(f'Test 성능 평가\\n{report_test}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rkDQ4wVxnMZe","executionInfo":{"status":"ok","timestamp":1709191057158,"user_tz":-540,"elapsed":288,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"e78bf497-6fbb-4cea-ab4a-9bba87b8efc9"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 오차행렬\n","[[202   2   0   0   0   0   0]\n"," [ 24 166  18   7   0   0   0]\n"," [  0  13 176  28   0   0   0]\n"," [  0   2  25 180  11   0   0]\n"," [  0   0   1   6 247   9   0]\n"," [  0   0   0   0   0 222   1]\n"," [  0   0   0   0   0   0 243]]\n","\n","Test 오차행렬\n","[[66  2  0  0  0  0  0]\n"," [ 8 53 10  1  0  0  0]\n"," [ 0  4 60  9  0  0  0]\n"," [ 0  0  8 59  5  0  0]\n"," [ 0  0  0  3 77  8  0]\n"," [ 0  0  0  0  0 73  1]\n"," [ 0  0  0  0  0  1 80]]\n","\n","\n","Train 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.893805  0.990196  0.939535       204\n","           1   0.907104  0.772093  0.834171       215\n","           2   0.800000  0.811060  0.805492       217\n","           3   0.814480  0.825688  0.820046       218\n","           4   0.957364  0.939163  0.948177       263\n","           5   0.961039  0.995516  0.977974       223\n","           6   0.995902  1.000000  0.997947       243\n","\n","    accuracy                       0.907138      1583\n","   macro avg   0.904242  0.904817  0.903334      1583\n","weighted avg   0.907532  0.907138  0.906212      1583\n","\n","Test 성능 평가\n","              precision    recall  f1-score   support\n","\n","           0   0.891892  0.970588  0.929577        68\n","           1   0.898305  0.736111  0.809160        72\n","           2   0.769231  0.821918  0.794702        73\n","           3   0.819444  0.819444  0.819444        72\n","           4   0.939024  0.875000  0.905882        88\n","           5   0.890244  0.986486  0.935897        74\n","           6   0.987654  0.987654  0.987654        81\n","\n","    accuracy                       0.886364       528\n","   macro avg   0.885114  0.885315  0.883188       528\n","weighted avg   0.888244  0.886364  0.885337       528\n","\n"]}]},{"cell_type":"code","source":["coefficients = logi_reg.coef_\n","\n","avg_importance = np.mean(np.abs(coefficients), axis=0)\n","feature_importance = pd.DataFrame({'Feature': X_train.columns, 'Importance': avg_importance})\n","feature_importance = feature_importance.sort_values('Importance', ascending=True)\n","feature_importance.plot(x='Feature', y='Importance', kind='barh', figsize=(10, 6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"id":"1U8tRhi8zR_y","executionInfo":{"status":"ok","timestamp":1709191094568,"user_tz":-540,"elapsed":1454,"user":{"displayName":"Ik Tae Kwon","userId":"16323851773370951409"}},"outputId":"7254f726-df50-4955-fd57-f7556ec99cba"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Feature'>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Ordinal encoding + scaling 섞는 것이 가장 낫네?"],"metadata":{"id":"NOLN2lVAnhc4"}}]}